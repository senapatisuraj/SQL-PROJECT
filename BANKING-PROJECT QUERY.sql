
--BANKING PROJECT
SELECT * FROM ACCOUNT_PERFORMANCE_D1;

SELECT * FROM EMPLOYEE_DETAILS_D1;

SELECT
A.ACCOUNT_NUMBER,
A.PORTFOLIO,
A.SSN,
A.PHONE_NO,
A.PLACE_NAME,
A.COUNTY,
A.CITY,
A.STATE,
A.ZIP,
A.REGION,
A.ACCOUNT_OPEN_DATE,
A.LAST_PAYMENT_DATE,
A.LOAN_AMOUNT,
A.LOAN_STATUS,
A.ORIGINATION_FICO_SCORE,
A.CURRENT_FICO_SCORE,
A.CURRENT_OUTSTANDING,
B.CUSTOMER_NUMBER,
B.COMPANY_NAME,
B.PRIMARY_INDUSTRY,
B.REVENUES_IN_MILLIONS_DOLLAR,
B.CATEGORY
INTO ACCOUNT_PERFORMANCE
FROM ACCOUNT_PERFORMANCE_D1 AS A
LEFT JOIN
EMPLOYEE_DETAILS_D1 AS B
ON 
A.ACCOUNT_NUMBER=B.ACCOUNT_NUMBER;

--Q2	Get Month on Booking (MOB) from Account Open Date to Current Date--
--Q3	Get Delinquency days (Loan Defaulted by number of days)--	
--		if loan_status="Non-Default" then Delienquncy days=0
--		Else Delienquncy days=datedif(last_payment_date,today(),"d")
-- Q5	Create Origination vs Currect Fico score variance in % --
-- Q6	Current Outstanding Balance in %--	Current_outstanding/Loan_amount

SELECT
ACCOUNT_NUMBER,
PORTFOLIO,
SSN,
PHONE_NO,
PLACE_NAME,
COUNTY,
CITY,
STATE,
ZIP,
REGION,
ACCOUNT_OPEN_DATE,
DATEDIFF(MONTH,ACCOUNT_OPEN_DATE,GETDATE()) AS MOB,
LAST_PAYMENT_DATE,
LOAN_AMOUNT,
LOAN_STATUS,
CASE 
   WHEN LOAN_STATUS='NON-DEFAULT' THEN '0'
   ELSE DATEDIFF(DAY,LAST_PAYMENT_DATE,GETDATE())
END AS DELINQUENCY_DAYS,
ORIGINATION_FICO_SCORE,
CURRENT_FICO_SCORE,
(ORIGINATION_FICO_SCORE-CURRENT_FICO_SCORE)/ORIGINATION_FICO_SCORE  AS FICO_SCORE_VARIANCE_PERCENTAGE,
CURRENT_OUTSTANDING,
CURRENT_OUTSTANDING/LOAN_AMOUNT AS CURRENT_OUTSTANDING_BALANCE_PERCENTAGE,
CUSTOMER_NUMBER,
COMPANY_NAME,
PRIMARY_INDUSTRY,
REVENUES_IN_MILLIONS_DOLLAR,
CATEGORY

INTO ACCOUNT_PERFORMANCE_V5
FROM ACCOUNT_PERFORMANCE;

SELECT * FROM ACCOUNT_PERFORMANCE_V5;

--Q4	Create Delinquency Bucket Days	Delinqency Days=0	Current
--		>0 and <=30	X Days
--		>30 and <=60	X+1 Days
--		>60 and <=90	X+2 Days
--		>90 and <=120	X+3 Days
--		>120 and <=150	X+4 Days
--		>150 and <=180	X+5 Days
--		>180	Charge Off

--Q7	Develop Risk Segment	Delinquency Days <=60	High-Risk-1
--		Score Variance in Negative %	
--		Outstanding Balance % >= 50%	
--		Delinquency Days > 60	                    High-Risk-2
--		Score Variance in Negative %	
--		Outstanding Balance % >= 50%	
--		Delinquency Days <= 60	                    High-Risk-3
--		Score Variance in Negative %	
--		Outstanding Balance % >30% and < 50%	
--		Delinquency Days> 60	                    High-Risk-4
--		Score Variance in Negative %	
--		Outstanding Balance % >30% and < 50%	
--		Delinquency Days <= 60	                    Mid_Risk-1
--		Score Variance in Negative %	
--		Outstanding Balance % >10% and < =30%	
--		Delinquency Days > 60	                    Mid_Risk-2
--		Score Variance in Negative %	
--		Outstanding Balance % >10% and < =30%	
--		Else Low_risk
SELECT 
*,
CASE
        WHEN DELINQUENCY_DAYS = 0 THEN 'Current'
        WHEN DELINQUENCY_DAYS > 0 AND DELINQUENCY_DAYS <= 30 THEN 'X Days'
        WHEN DELINQUENCY_DAYS > 30 AND DELINQUENCY_DAYS <= 60 THEN 'X+1 Days'
        WHEN DELINQUENCY_DAYS > 60 AND DELINQUENCY_DAYS <= 90 THEN 'X+2 Days'
        WHEN DELINQUENCY_DAYS > 90 AND DELINQUENCY_DAYS <= 120 THEN 'X+3 Days'
        WHEN DELINQUENCY_DAYS > 120 AND DELINQUENCY_DAYS <= 150 THEN 'X+4 Days'
        WHEN DELINQUENCY_DAYS > 150 AND DELINQUENCY_DAYS <= 180 THEN 'X+5 Days'
        ELSE 'CHARGE_OFF'
    END AS DELINQUENCY_BUCKET,
CASE
        WHEN DELINQUENCY_DAYS <= 60
             AND FICO_SCORE_VARIANCE_PERCENTAGE < 0
             AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE >= 0.5 THEN 'High-Risk-1'
        WHEN DELINQUENCY_DAYS > 60
             AND FICO_SCORE_VARIANCE_PERCENTAGE < 0
             AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE >= 0.5 THEN 'High-Risk-2'
        WHEN DELINQUENCY_DAYS <= 60
             AND FICO_SCORE_VARIANCE_PERCENTAGE < 0
             AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE > 0.3 AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE < 0.5 THEN 'High-Risk-3'
        WHEN DELINQUENCY_DAYS > 60
             AND FICO_SCORE_VARIANCE_PERCENTAGE < 0
             AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE > 0.3 AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE < 0.5 THEN 'High-Risk-4'
        WHEN DELINQUENCY_DAYS <= 60
             AND FICO_SCORE_VARIANCE_PERCENTAGE < 0
             AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE > 0.1 AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE <= 0.3 THEN 'Mid-Risk-1'
        WHEN DELINQUENCY_DAYS > 60
             AND FICO_SCORE_VARIANCE_PERCENTAGE < 0
             AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE > 0.1 AND CURRENT_OUTSTANDING_BALANCE_PERCENTAGE <= 0.3 THEN 'Mid-Risk-2'
        ELSE 'Low-Risk'
    END AS RISK_SEGMENT
INTO ACCOUNT_PERFORMANCE_V6
FROM ACCOUNT_PERFORMANCE_V5;

SELECT * FROM ACCOUNT_PERFORMANCE_V6;
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME='ACCOUNT_PERFORMANCE_V5';

SELECT
ACCOUNT_NUMBER,
PORTFOLIO,
SSN,
PHONE_NO,
PLACE_NAME,
COUNTY,
CITY,
STATE,
ZIP,
REGION,
ACCOUNT_OPEN_DATE,
MOB,
LAST_PAYMENT_DATE,
LOAN_AMOUNT,
LOAN_STATUS,
DELINQUENCY_DAYS,
DELINQUENCY_BUCKET,
ORIGINATION_FICO_SCORE,
CURRENT_FICO_SCORE,
FORMAT(FICO_SCORE_VARIANCE_PERCENTAGE,'P0'),
CURRENT_OUTSTANDING,
FORMAT(CURRENT_OUTSTANDING_BALANCE_PERCENTAGE,'P0'),
CUSTOMER_NUMBER,
RISK_SEGMENT,
COMPANY_NAME,
PRIMARY_INDUSTRY,
REVENUES_IN_MILLIONS_DOLLAR,
CATEGORY
FROM ACCOUNT_PERFORMANCE_V6;

--Q8	Create Summary Report for all different portfolios	Good Loan Per Account	Outstanding Balance of non-default account/# of non default account
--		Bad Loan Per Account	Outstanding Balance of default account/# of default account

SELECT
    PORTFOLIO,
    SUM(CASE WHEN LOAN_STATUS = 'Non-Default' THEN CURRENT_OUTSTANDING ELSE 0 END) / COUNT(CASE WHEN LOAN_STATUS = 'Non-Default' THEN 1 END) AS Good_Loan_Per_Account,
    SUM(CASE WHEN LOAN_STATUS = 'Default' THEN CURRENT_OUTSTANDING ELSE 0 END) / COUNT(CASE WHEN LOAN_STATUS = 'Default' THEN 1 END) AS Bad_Loan_Per_Account
FROM ACCOUNT_PERFORMANCE
    
GROUP BY
    PORTFOLIO;

--Q9	Create Summary Report for all different portfolios
SELECT
PORTFOLIO,
COUNT(ACCOUNT_NUMBER) AS NO_ACCOUNT,
SUM(CURRENT_OUTSTANDING) AS TOTAL_OUTSTANDING
FROM ACCOUNT_PERFORMANCE_V6

--Q10 Create Summary Report for all different portfolios
SELECT 
DEVLOP_RISK_SEGMENT,
COUNT(ACCOUNT_NUMBER) AS NO_ACCOUNT,
SUM(CURRENT_OUTSTANDING) AS TOTAL_OUTSTANDING
FROM ACCOUNT_PERFORMANCE_V6;


